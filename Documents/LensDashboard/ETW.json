{
  "id": "da96a734b7be4920a28a1ff810f01a4b",
  "name": "ETW",
  "workspace": "9f42ae2a-5f93-4238-9c42-24f6d050b342",
  "provider": "Dso",
  "scenario": "",
  "description": "",
  "tags": "",
  "config": {
    "jobName": "da96a734b7be4920a28a1ff810f01a4b",
    "jobDisplayName": "ETW",
    "jobDescription": "",
    "tags": "",
    "maxJobInstances": 1,
    "isDebug": false,
    "appendUtcIndicator": false,
    "allocationType": 0,
    "jobScheduleSettings": {
      "scheduleType": "Frequency",
      "frequencySettings": {
        "cronSchedule": "0 11 18 */1 * *",
        "backFill": false,
        "monthly": false
      }
    },
    "defaultICMAlerts": false,
    "activities": [
      {
        "activityDisplayName": "ETW-Event_Results",
        "activityType": "DataMovement",
        "parameters": [
          {
            "name": "cluster",
            "value": "masvaas"
          },
          {
            "name": "database",
            "value": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          }
        ],
        "id": "69697bee-341f-4110-b14a-fbd8c91261f2",
        "transformEngine": "Kusto",
        "input": {
          "type": "KustoQuery",
          "connectionName": "8861b1ad-ae21-41e1-b742-f59ee4c1ad43",
          "query": "set query_take_max_records=5000;\r\nalias database db = cluster('{cluster}').database('{database}');\r\nlet view=datatable(MachineName:string,ProviderName:string,EventName:string,OccurrenceTime:datetime) [];\r\nlet containsValue=(value:string) { not(isempty(value)) and value<>\"<null>\" and value<>\"NULL\" and value<>\"0\"};\r\nunion isfuzzy=true view,(find withsource=source in (database(\"db\").['ETL-*']) \r\n    where \r\n    ( \r\n    containsValue(Error)\r\n    or containsValue(ErrorCode)\r\n    or containsValue(ErrorDetails)\r\n    or containsValue(ErrorInfo)\r\n    or containsValue(ErrorMessage)\r\n    or containsValue(ErrorReason)\r\n    or containsValue(ErrorType)\r\n    or containsValue(ConvertedExceptionMessage) \r\n    or containsValue(ConvertedExceptionType)\r\n    or containsValue(Exception)\r\n    or containsValue(ExceptionMessage)\r\n    or containsValue(ExceptionStackTrace)\r\n    or containsValue(ExceptionString)\r\n    or containsValue(ExceptionType)\r\n    or containsValue(InnerExceptionMessage)\r\n    or containsValue(InnerExceptionStackTrace)\r\n    or containsValue(InnerExceptionType)\r\n    or containsValue(PredominantExceptionType)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionMessage)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionStackTrace)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionType)\r\n    or containsValue(WorkflowCompletionExceptionMessage)\r\n    or containsValue(WorkflowCompletionExceptionStackTrace)\r\n    or containsValue(WorkflowCompletionExceptionType))\r\n| sort by OccurrenceTime asc\r\n| project MachineName,ProviderName,EventName,OccurrenceTime\r\n| distinct MachineName,ProviderName,EventName,OccurrenceTime)"
        },
        "output": {
          "type": "KustoTable",
          "tableType": "Snapshot",
          "connectionName": "40373140-e4e5-4527-a01e-563718ea4599",
          "table": "ETW_Event"
        },
        "validationQuery": "",
        "maxReprocessingAge": null
      },
      {
        "activityDisplayName": "TopPatterns",
        "activityType": "DataMovement",
        "parameters": [
          {
            "name": "cluster",
            "value": "masvaas"
          },
          {
            "name": "database",
            "value": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          }
        ],
        "id": "5dd17864-fc30-494c-b360-13dc82b79c60",
        "transformEngine": "Kusto",
        "input": {
          "type": "KustoQuery",
          "connectionName": "8861b1ad-ae21-41e1-b742-f59ee4c1ad43",
          "query": "set query_take_max_records=5000;\r\nalias database db = cluster('masvaas').database('TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33');\r\nlet containsValue=(value:string) { not(isempty(value)) and value<>\"<null>\" and value<>\"NULL\" and value<>\"0\"};\r\nfind withsource=source in (database(\"db\").['ETL-*']) \r\n    where \r\n    ( \r\n    containsValue(Error)\r\n    or containsValue(ErrorCode)\r\n    or containsValue(ErrorDetails)\r\n    or containsValue(ErrorInfo)\r\n    or containsValue(ErrorMessage)\r\n    or containsValue(ErrorReason)\r\n    or containsValue(ErrorType)\r\n    or containsValue(ConvertedExceptionMessage) \r\n    or containsValue(ConvertedExceptionType)\r\n    or containsValue(Exception)\r\n    or containsValue(ExceptionMessage)\r\n    or containsValue(ExceptionStackTrace)\r\n    or containsValue(ExceptionString)\r\n    or containsValue(ExceptionType)\r\n    or containsValue(InnerExceptionMessage)\r\n    or containsValue(InnerExceptionStackTrace)\r\n    or containsValue(InnerExceptionType)\r\n    or containsValue(PredominantExceptionType)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionMessage)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionStackTrace)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionType)\r\n    or containsValue(WorkflowCompletionExceptionMessage)\r\n    or containsValue(WorkflowCompletionExceptionStackTrace)\r\n    or containsValue(WorkflowCompletionExceptionType))\r\n    project EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,AttemptedIngestTime,FileName,pack(*)\r\n| take 10000\r\n| distinct EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,tostring(pack_)\r\n| project EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,pack_=todynamic(pack_)\r\n| project EventName,ProviderName,FormattedMessage,Message=pack_.[\"Message\"],MachineName,OccurrenceTime,pack_\r\n| project signature=strcat(\"ProviderName: \",ProviderName,\"\\nEventName: \",EventName,\"\\nFormattedMessage: \", FormattedMessage,\"\\nMessage: \",Message)\r\n| reduce by signature with threshold=0.04\r\n| order by Count desc\r\n"
        },
        "output": {
          "type": "KustoTable",
          "tableType": "Snapshot",
          "connectionName": "40373140-e4e5-4527-a01e-563718ea4599",
          "table": "ETW_TopPattern"
        },
        "validationQuery": "",
        "maxReprocessingAge": null
      },
      {
        "activityDisplayName": "TopFiltered_ETW_Events",
        "activityType": "DataMovement",
        "parameters": [
          {
            "name": "cluster",
            "value": "masvaas"
          },
          {
            "name": "database",
            "value": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          }
        ],
        "id": "402d327a-a382-45fc-b1fa-84eb2277408d",
        "transformEngine": "Kusto",
        "input": {
          "type": "KustoQuery",
          "connectionName": "8861b1ad-ae21-41e1-b742-f59ee4c1ad43",
          "query": "set query_take_max_records=5000;\r\nalias database db = cluster('{cluster}').database('{database}');\r\nlet containsValue=(value:string) { not(isempty(value)) and value<>\"<null>\" and value<>\"NULL\" and value<>\"0\"};\r\nfind withsource=source in (database(\"db\").['ETL-*']) \r\n    where \r\n    ( \r\n    containsValue(Error)\r\n    or containsValue(ErrorCode)\r\n    or containsValue(ErrorDetails)\r\n    or containsValue(ErrorInfo)\r\n    or containsValue(ErrorMessage)\r\n    or containsValue(ErrorReason)\r\n    or containsValue(ErrorType)\r\n    or containsValue(ConvertedExceptionMessage) \r\n    or containsValue(ConvertedExceptionType)\r\n    or containsValue(Exception)\r\n    or containsValue(ExceptionMessage)\r\n    or containsValue(ExceptionStackTrace)\r\n    or containsValue(ExceptionString)\r\n    or containsValue(ExceptionType)\r\n    or containsValue(InnerExceptionMessage)\r\n    or containsValue(InnerExceptionStackTrace)\r\n    or containsValue(InnerExceptionType)\r\n    or containsValue(PredominantExceptionType)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionMessage)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionStackTrace)\r\n    or containsValue(ResourceLifeCycleHandlerExceptionType)\r\n    or containsValue(WorkflowCompletionExceptionMessage)\r\n    or containsValue(WorkflowCompletionExceptionStackTrace)\r\n    or containsValue(WorkflowCompletionExceptionType))\r\n    project EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,AttemptedIngestTime,FileName,pack(*)\r\n| take 10000\r\n| distinct EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,tostring(pack_)\r\n| project EventName,ProviderName,FormattedMessage,MachineName,OccurrenceTime,pack_=todynamic(pack_)\r\n| project EventName,ProviderName,FormattedMessage,Message=pack_.[\"Message\"],MachineName,OccurrenceTime,pack_\r\n| sort by OccurrenceTime asc"
        },
        "output": {
          "type": "KustoTable",
          "tableType": "Snapshot",
          "connectionName": "40373140-e4e5-4527-a01e-563718ea4599",
          "table": "ETW_TopFiltered_ETWEvents"
        },
        "validationQuery": "",
        "maxReprocessingAge": null
      }
    ],
    "project": "lens-9f42ae2a-5f93-4238-9c42-24f6d050b342",
    "context": {
      "uiCron": {
        "freq": "day",
        "rate": 1,
        "value": "0 11 18 */1 * *",
        "isEntered": false,
        "hourMins": 50,
        "minuteSecs": 44,
        "time": "2019-10-02T01:11:50.102Z",
        "weekDays": [
          true,
          false,
          false,
          false,
          false,
          false,
          false
        ],
        "monthDay": 1
      },
      "lensScenario": null,
      "lensCreatedBy": "v-vasub",
      "lensCreatedDate": "2019-10-01T18:14:41.9926492Z",
      "lensModifiedBy": "v-vasub",
      "lensModifiedDate": "2019-10-01T20:11:06.2461638Z"
    },
    "failureWebhook": {
      "url": "https://lens.msftcloudes.com/share/jobnotificationemail",
      "aadResource": "aa0c39bf-5086-4900-bf89-6404bff62cf8",
      "aadTenant": "microsoft.onmicrosoft.com"
    }
  },
  "createdBy": "v-vasub",
  "createdDate": "2019-10-01T18:14:41.9926492Z",
  "nextExecutionDate": "2019-10-03T18:11:00Z",
  "modifiedBy": "v-vasub",
  "modifiedDate": "2019-10-01T20:11:06.2461638Z",
  "version": "6",
  "isEnabled": true,
  "isQuarantined": false,
  "instances": [
    {
      "id": "lens-9f42ae2a-5f93-4238-9c42-24f6d050b342|da96a734b7be4920a28a1ff810f01a4b|T|2019-10-02T18:11:00.0000000Z",
      "jobId": "da96a734b7be4920a28a1ff810f01a4b",
      "workspace": "9f42ae2a-5f93-4238-9c42-24f6d050b342",
      "status": "Succeeded",
      "jobStatus": "0",
      "errorMsg": null,
      "createdDate": "2019-10-02T18:11:03Z",
      "startTime": "2019-10-02T18:11:04Z",
      "endTime": "2019-10-02T18:13:50Z",
      "elapsedTime": "2019-10-03T00:02:46.8641046Z",
      "seed": "2019-10-01T18:11:00Z",
      "logLink": "https://analytics.applicationinsights.io/subscriptions/56dcf710-f955-442e-8ac2-3b90ab65dea1/resourcegroups/datastudioorchestrator/components/datastudiojobs?q=H4sIAAAAAAAEAFWQzU7DMBCE70i8w96aqC5ykkolkcKJCxJwIZyRsVdglNjGdqCR%2bvCsm%2f7Qk70765n9PBptDWQev0cMMeQMMoUOjUIjNe7r6IXEADvAbSQBFEah%2bwAtqMmIQcvMjH2fp6e4legiOaZx5%2b0XyghRD2QtBsfAOvQi6W8PigE9RnLRxqAfbIjd5JABDQfxcSE8zS12jM6vr3bw%2b4keLxyhbWEx9npjq9dlLWy7AEH7nvLhjlYWEVMjK3lRrwq%2b4mVX3DZF0fDqZlOt63VZLjlvON%2bHHBm6IwPte%2fJj8II%2f6HWcHunsSQr%2fawbPM2DiZHCAoKkDIYP780%2fOt8RlvUIP7xOcMxUG%2bQdH%2bfI3qQEAAA%3d%3d&apptype=web",
      "elapsedMilliseconds": 166864,
      "parameters": {
        "startDateTime": "2019-10-01T18:11:00Z",
        "endDateTime": "2019-10-02T18:11:00Z"
      },
      "segments": [
        {
          "segmentId": "69697bee-341f-4110-b14a-fbd8c91261f2",
          "startTime": "2019-10-02T18:11:04.4849999Z",
          "endTime": "2019-10-02T18:11:57.0650323Z",
          "parameters": {
            "cluster": "masvaas",
            "database": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          },
          "segmentName": "ETW-Event_Results"
        },
        {
          "segmentId": "5dd17864-fc30-494c-b360-13dc82b79c60",
          "startTime": "2019-10-02T18:11:58.283829Z",
          "endTime": "2019-10-02T18:12:37.1335838Z",
          "parameters": {
            "cluster": "masvaas",
            "database": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          },
          "segmentName": "TopPatterns"
        },
        {
          "segmentId": "402d327a-a382-45fc-b1fa-84eb2277408d",
          "startTime": "2019-10-02T18:12:38.3406291Z",
          "endTime": "2019-10-02T18:13:42.7684628Z",
          "parameters": {
            "cluster": "masvaas",
            "database": "TenantAvailabilityPNU-TestPass-MAS_Prod_1.1908.4.32-20190917181045-5454420b-2e38-4b9e-8b56-1712d321cf33"
          },
          "segmentName": "TopFiltered_ETW_Events"
        }
      ],
      "groupId": null
    }
  ],
  "shareType": "shared",
  "eTag": ""
}